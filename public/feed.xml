<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Нуриль Барадусов]]></title>
        <description><![CDATA[Нуриль Барадусов]]></description>
        <link>https://baradusov.ru</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Thu, 13 May 2021 08:57:05 GMT</lastBuildDate>
        <atom:link href="https://baradusov.ru/feed.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Доступность  —  это не то, о чём вы думаете]]></title>
            <description><![CDATA[<p><em>Перевод статьи</em> <a href="https://boagworld.com/accessibility/accessibility-is-not-what-you-think/"><em>Accessibility is Not What You Think</em></a> <em>Пола Бога.</em></p><blockquote><p>Доступность  — это не только удовлетворение нужд людей с ограниченными возможностями или подстраивание под пограничные случаи. Доступность затрагивает всех.</p></blockquote><p>Я уже писал о неправильном понимании <a href="https://boagworld.com/usability/user-experience-design-is-not-what-you-think/">пользовательского опыта</a> и <a href="https://boagworld.com/usability/think-know-information-architecture-might-true/">информационной архитектуры</a>. Теперь я хочу развеять некоторые мифы о <a href="https://boagworld.com/category/accessibility/">доступности</a>.</p><p>Мне не нравится термин “доступность”. Это достаточно точный термин, но он рождает предубеждения. Когда говорят о доступности, у людей закатываются глаза. Они представляют либо пандусы, либо чеклисты WCAG. В любом случае это не даёт настоящего понимания о доступности.</p><p>Поэтому я говорю об инклюзивном <a href="https://boagworld.com/category/design/">дизайне</a>. Доступность  —  это дизайн для всех, а не для меньшинства. Это не только дизайн для людей с ограниченными возможностями. Это дизайн для каждого из нас.</p><p>В этом и заключается проблема нашего понимания доступности. Мы думаем, что доступность охватывает только пограничные случаи. С этой точки зрения доступность не выглядит как что-то стоящее затрат. Как можно оправдать денежные вложения на расшифровку подкаста, если ты даже не знаешь, есть ли у тебя глухие пользователи? Но от хорошей доступности (или инклюзивного дизайна) выигрывают все.</p><p>Возьмём в пример расшифровку аудио. У расшифровки есть много преимуществ.</p><ul><li>Удобно искать.</li><li>Позволяет людям перечитать контент, который трудно разобрать в аудио.</li><li>Ссылаться на содержимое проще.</li><li>Предоставляет доступ к контенту тем, кто не может слушать аудио, не беспокоя других (например, в офисе).</li></ul><p>Расшифровка  — не единственное, что приносит пользу людям. Это относится почти ко всем специальным возможностям. Поделюсь несколькими примерами.</p><h3>Технологическая недееспособность</h3><p>В наши дни почти у всех включен JavaScript. Зачем заморачиваться и адаптировать сайты для тех, у кого он выключен? Но что на счёт тех, кто пользуется маломощными <a href="https://boagworld.com/category/mobile-web/">мобильными</a> устройствами. Я не один раз видел, как мой iPhone не мог справиться с JavaScript. Но есть и те, кто пользуется обычными телефонами или медленным интернетом.</p><p>А что насчёт наших громоздких веб-сайтов? В мире высокоскоростного интернета они, конечно, считаются нормальными. Но как насчёт тех, у кого медленное соединение? А тех, у кого ограниченный интернет-трафик?</p><p>Каждый из нас в какой-то момент может оказаться в подобной ситуации.</p><h3>Нарушение зрения</h3><p>Дизайнеры любят утончённый во всех смыслах дизайн. Это хорошо, когда у вас стопроцентное зрение, но а что со слабовидящими? Им нужна высокая контрастность. Но дело ведь не только в них. Что насчёт тех, кому уже за 40, и чьё зрение начинает ухудшаться? А тех, кто использует телефон на улице с бликующим экраном?</p><p>Если вы когда-нибудь пробовали работать в парке в солнечный день, вы поймёте всю важность высокой контрастности.</p><h3>Когнитивные нарушения</h3><p>Люди редко учитывают тех, у кого есть когнитивные нарушения. Они же никогда не будут использовать мой сайт. Какой смысл разрабатывать для них дизайн?</p><p>В действительности у нас всех бывают моменты когнитивных нарушений! Мы отвлечены, спешим или чем-нибудь заняты. Возможно, у кого-то дислексия, или английский для него не родной язык.</p><p>Самое главное: если людям с когнитивными нарушениями удобно пользоваться вашим сайтом, то и для остальных он будет только удобнее.</p><h3>Нарушение моторики</h3><p><em>“Если кому-то трудно пользоваться мышкой или клавиатурой, то им не стоит пользоваться интернетом”.</em> Кто-то однажды сказал мне такое. Ужасная позиция. Но это касается не только людей с серьёзными нарушениями двигательных функций. Есть много причин, почему кому-то может быть трудно использовать мышку или клавиатуру.</p><p>При артрите пользоваться мышкой может быть затруднительно. Сенсорные экраны не такие точные, как мышка, поэтому выделять что-то может быть сложнее. А как насчёт тех, кто страдает от травмы постоянного напряжения или перелома кисти?</p><h3>Совместимость с экранными чтецами</h3><p>Вы возможно думаете, что адаптирование вашего сайта для экранных читалок принесёт пользу только пользователям с нарушением зрения. Вы ошибаетесь. Например, я использую преобразование текста в речь каждый день и в этом я далеко не одинок.</p><p>На моём iPhone я постоянно использую экранного чтеца, разработанного для людей с нарушением зрения. Я использую его для чтения веб-страниц, статей в Pocket и даже книг в Kindle. Я использую его, занимаясь спортом, за рулём или просто лёжа ночью в кровати, когда уже устал смотреть в экран.</p><p>Уверен, что вы уже поняли мою мысль. Доступность  —  это не только дизайн для меньшинства. Это дизайн для всех. Я глубоко верю в то, что нельзя позволять пограничным случаям <a href="https://boagworld.com/usability/stop-focusing-on-edge-cases">вредить пользовательскому опыту</a>. Но для меня доступность не подпадает под эту категорию. Потому что она помогает всем и в итоге делает сайт намного удобнее.</p>]]></description>
            <link>https://baradusov.ru/accessibility-is-not-what-you-think</link>
            <guid isPermaLink="true">https://baradusov.ru/accessibility-is-not-what-you-think</guid>
            <pubDate>Wed, 31 Oct 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Автоматические мысли]]></title>
            <description><![CDATA[<p><em>Серия кратких конспектов избранных глав из книги “Как победить стресс и депрессию”, которые могут помочь справиться с низкой самооценкой, навязчивыми негативными мыслями, перфекционизмом и откладыванием дел.</em></p><p>Содержание:</p><ol><li>Автоматические мысли.</li><li><a href="https://baradusov.ru/patterns-of-limited-thinking">Паттерны ограниченного мышления</a>.</li></ol><hr><p>Мысли вызывают чувства. То есть любое событие не имеет никакой эмоциональной окраски. То, какие чувства мы испытываем после какого-либо события, зависит от наших мыслей в тот момент.</p><blockquote><p>Событие =&gt; Мысль =&gt; Чувство</p></blockquote><p>Пресечение автоматических негативных мыслей может помочь снизить появление болезненных чувств.</p><p>Автоматические мысли на событие могут загнать в цикл. Событие вызывает автоматические негативные мысли, которые вызывают болезненные чувства, которые снова вызывают негативные мысли, которые так же вызывают болезненные чувства и т.д.</p><blockquote><p>Событие =&gt; Мысль =&gt; Чувство =&gt; Мысль =&gt; Чувство =&gt; и т.д.</p></blockquote><p>Автоматические мысли имеют определённые особенности:</p><ol><li><strong>Они часто стенагрофичны</strong>, то есть состоят из одного или нескольких слов, а иногда возникают в форме визуального образа или краткого воссоздания событий из прошлого.</li><li><strong>Автоматические мысли не вызывают сомнений, какими бы нелогичными они ни были</strong>. Они такие же правдободные, как и чувственные ощущения.</li><li><strong>Автоматические мысли воспринимаются как самопроизвольные.</strong> Вы не сомневаетесь в автоматических мыслях, они просто внезапно появляются, их едва можно заметить, не говоря уже о том, чтобы подвергнуть анализу.</li><li><strong>Автоматические мысли носят характер долженствования — должен, надо, следует.</strong> Долженствования являются простыми жизненными правилами, которые становятся таковыми автоматически, и у вас просто не хватает времени их проанализировать.</li><li><strong>Автоматические мысли часто отображают все в самом ужасном свете</strong>. Такие мысли — главный источник тревоги.</li><li><strong>Автоматические мысли устойчивы и самопроизвольны</strong>. Поскольку они бессознательны и кажутся убедительными, их сложно «выключить».</li><li><strong>Автоматические мысли отличаются от публичных высказываний</strong>. Для посторонних любые события из жизни мы преподносим как причинно-следственную связь («Уволили, поэтому в таком подавленном состоянии»), но реальные мысли в большинстве случаев являются более мрачными («Я неудачник»).</li><li><strong>Автоматические мысли зацикливают на одних и тех же проблемах</strong>. Из-за чего заметна только одна сторона происходящего, в результате вызываются постоянные болезненные переживания. Такое суженное поле зрения называют «селективным абстрагированием», то есть восприятие определённых аспектов ситуации и игнорирование всех прочих.</li><li><strong>Автоматические мысли внушаются</strong>. С детства нас приучают думать и толковать события определённым образом. За долгие годы в голове крепко обосновались автоматические мысли, которые трудно обнаружить и изменить.</li></ol><p>Нужно научиться слышать свои автоматические мысли. Для этого необходимо:</p><ul><li>Воссоздать проблемную ситуацию и мысленно переживать её до тех пор, пока не появятся болезненные чувства. Здесь нужно поймать мысли, которые возникли в момент возникновения болезненных чувств.</li><li>Пойманные краткие автоматические мысли нужно развернуть. Ключевых слов недостаточно, нужна полная картина мыслей, чтобы понять искажённую логику, которая рождает болезненные чувства.</li></ul><p>Нужно записывать или просто подсчитывать автоматические мысли. Концентрация на автоматических мыслях позволит начать сомневаться в их истинности, дистанцироваться от них и ощутить контроль.</p><p>Мысли порождают и поддерживают эмоции. Нужно прислушиваться к тому, что вы думаете и определять насколько это верно.</p>]]></description>
            <link>https://baradusov.ru/auto-thoughts</link>
            <guid isPermaLink="true">https://baradusov.ru/auto-thoughts</guid>
            <pubDate>Tue, 24 Jul 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Управление личными знаниями]]></title>
            <description><![CDATA[<p>todo</p><ul><li>Написать подводку</li><li>Скорее всего  про большое количество информаци и что она постоянно исчезает</li><li>Упомянуть дата хоард</li><li>Не забыть повставлять побольше фотографий и картинок</li></ul><h2>Введение</h2><p>Есть такое понятие как управление личными знаниями. В Википедии написано, что это сбор, обработка, хранение и использование знаний. Есть ещё такие понятия как управление личной информацией, личная база знаний, личная вики, второй мозг, экзомозг. В целом это всё одно и тоже. </p><p>За всю жизнь мы узнаем много полезной информации, но наш мозг не может запомнить всё или моментально вспомнить что-то, поэтому люди начали придумывать способы сохранять личные знания.</p><p>После того как люди отошли от наскальных рисунков и устных традиций, и передача знаний перешла на бумагу, со временем начали развиваться и инструменты для управления этим знанием.</p><p>Начиная с эпохи Возрождения и до начала 20 века, популярным способом хранения личных знаний были записные книжки (commonplace books). Они были больше похожи на скрапбуки, в которые записывали всё подряд: от рецептов и цитат до таблицы весов и формул. </p><p>Предшественниками записных книжек были дневники римских и греческих философов. Но они в основном записывали свои мысли и цитаты других философов (например, «К самому себе» Марка Аврелия). Одна из самых известных записных книжек — это дневник Леонардо да Винчи, в котором почти 13000 страниц заметок и рисунков. Ещё один пример из Италии 15 века — дзибальдоне (zibaldone). Неизвестный итальянец записал свои знания, а потом всё это печаталось как руководство для торговцев, написанное простым языком. Одна из фунций этой книги —&nbsp;научить полезным математическим навыкам молодого торговца, используя задачи с практическими проблемами, например, насколько велико дерево или сколько времени потребуется, чтобы добраться до Рима.</p><p>Похожие книги были в других странах. Например, в Китае они назывались биджи, в Японии —&nbsp;дзуйхицу («Записки у изголовья»). В Польше и Литве в 16-18 веках многие семьи вели silva rerum. Это были домашние, многопоколенченские хроники, в которых записывали семейные традиции, дневниковые записи, текущие события, мемуары, письма, шутки, генеалогические древа, советы и т.п.</p><p>В качестве примеров таких книг можно посмотреть записную книжку Говарда Лавкрафта, перепечатанную в журнале Wired, или книгу Элизабет Литтлтон (дочери английского писателя Томаса Брауна).</p><p>В конце 18 века, когда Карл Линней выпускал уже 12 издание своей «Системы природы», в которой количество видов растений достигло около 5000 тысяч, чтобы справиться с информационной перегрузкой он начал использовать индексные карточки как инструмент для управления данными. Позже индексные карточки стали стандартом для библиотек. Или, например, они использовались в информационном хранилище Mundaneum, целью которого было объединение в одном месте всех знаний о мире во всех его формах (книги, плакаты, газеты со всего мира и т. д.) в гигантской библиографии. Хранилище это считается предшевственником интернета, хотя больше похоже на Википедию. В какой-то момент они даже запустили поисковый сервис, котрым мог воспользоваться любой человек в мире, надо было просто прислать запрос почтой или телеграфом, такой Google конца 19 века.</p><p>Кстати, Владимир Набоков тоже использовал индексные карточки, только для написания романов. Он делал на них записи, которые постепенно копировал, расширял и менял местами, пока из них не получался роман.</p><p>Швейцарский учёный Конрад Геснер был одним из первых попытавшихся систематизировать накопленные человечеством знания. В 1545 году после четырёх лет  исследований он издал Bibliotheca universalis, каталог всех известных работ на латинском, греческом языках и иврите, всех писателей, которые когда либо жили, с названием всех их работ, и кратким описанием.</p><p>В своих учениях, ещё до Карла Линнея, он описал похожую идею: «Во время чтения всё, что кажется важным или полезным стоит копировать на качественный лист бумаги. Каждая новая строка должна использоваться для отдельной идеи. Потом лист разрезается ножницами. Отрезанные кусочки листа распологаются по желанию и сортируются на столе или в маленькие коробочки». Так он изобрёл метод управления знаниями и конспектирования под названием зеттелькастен (Zettelkästen), который позже был более детально описан немецким историком Иоганном Якобом Мозером. </p><p>Популярность в современности связана с немецким социологом Никласом Луманом. Его картотека насчитывала 90 тысяч заметок, а за всю жизнь он написал более 70 книг и около 500 статей на социологические темы. Он описал зеттелькастен в своём эссе Kommunikation mit Zettelkästen (на английском Communicating with Slip Boxes).</p><p>Сутью метода является обработка информации и связывании с уже существующими знаниями для создания сети. Луман записывал на карточку заметку, формулировал заголовок на одной стороне, а на другой записывал все референсы. В зависимости от места в картотеке, карточке давался ID-адрес, дополнительно указывались связи с другими карточками. Эта информация добавлялась на обе карточки, чтобы поддерживать двухстороннюю связь. Чуть подробнее простым языком можно почитать в статье <a href="https://vas3k.club/post/3040/">https://vas3k.club/post/3040/</a>.</p><p>В сентябре 1945 года в журнале The Atlantic было опубликовано эссе американского инженера Вэнивара Буша под нзванием  «As We May Think».  </p><ul><li>Про офисы будущего</li><li>Про мемекс</li><li>Про the brain (<a href="https://glebkalinin.ru/the-brain/">https://glebkalinin.ru/the-brain/</a>) ???</li><li>Проект Ксанаду ???</li></ul><ul><li><p>Упомнять про лайфлоггинг и quantified self и что нибудь ещё что найду</p></li><li><p>примеры из современного мира
(Волобуев, и чувак про мыслетоплево который рассказывает)</p></li><li><p>свои намерения</p></li><li><p>рефы <a href="https://hyfen.net/memex/">https://hyfen.net/memex/</a></p></li><li><p>ещё в закладках <a href="https://beepb00p.xyz/tags.html#pkm">https://beepb00p.xyz/tags.html#pkm</a></p></li></ul><p>судя по названию и описанию это главный референс
<a href="https://www.sciencehistory.org/distillations/magazine/information-overload">https://www.sciencehistory.org/distillations/magazine/information-overload</a></p><p><a href="https://last-ent.com/posts/mapping-thoughts/">https://last-ent.com/posts/mapping-thoughts/</a>
<a href="https://beepb00p.xyz/tags.html#pkm">https://beepb00p.xyz/tags.html#pkm</a></p><p><a href="https://en.m.wikipedia.org/wiki/Personal_knowledge_management">https://en.m.wikipedia.org/wiki/Personal_knowledge_management</a>
<a href="https://en.m.wikipedia.org/wiki/Personal_knowledge_base">https://en.m.wikipedia.org/wiki/Personal_knowledge_base</a></p><p><a href="https://en.wikipedia.org/wiki/Commonplace_book">https://en.wikipedia.org/wiki/Commonplace_book</a>
<a href="https://en.m.wikipedia.org/wiki/Leonardo_da_Vinci#Journals_and_notes">https://en.m.wikipedia.org/wiki/Leonardo_da_Vinci#Journals_and_notes</a>
<a href="https://www.atlasobscura.com/articles/how-to-keep-a-zibaldone-a-13thcentury-answer-to-tumblr">https://www.atlasobscura.com/articles/how-to-keep-a-zibaldone-a-13thcentury-answer-to-tumblr</a>
<a href="https://www.maa.org/press/periodicals/convergence/mathematical-treasure-problems-from-the-zibaldone-da-canal">https://www.maa.org/press/periodicals/convergence/mathematical-treasure-problems-from-the-zibaldone-da-canal</a>
<a href="http://www.thefreelibrary.com/_/print/PrintArticle.aspx?id=18881405">http://www.thefreelibrary.com/_/print/PrintArticle.aspx?id=18881405</a>
<a href="http://cudl.lib.cam.ac.uk/view/MS-ADD-04004/39">http://cudl.lib.cam.ac.uk/view/MS-ADD-04004/39</a>
<a href="https://en.wikipedia.org/wiki/Biji_(Chinese_literature)">https://en.wikipedia.org/wiki/Biji_(Chinese_literature)</a>
<a href="https://www.wired.com/2011/07/h-p-lovecrafts-commonplace-book/">https://www.wired.com/2011/07/h-p-lovecrafts-commonplace-book/</a>
<a href="https://archive.org/details/commonplacebooko00jameuoft/page/n7/mode/2up">https://archive.org/details/commonplacebooko00jameuoft/page/n7/mode/2up</a>
<a href="https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%BF%D0%B8%D1%81%D0%BA%D0%B8_%D1%83_%D0%B8%D0%B7%D0%B3%D0%BE%D0%BB%D0%BE%D0%B2%D1%8C%D1%8F">https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%BF%D0%B8%D1%81%D0%BA%D0%B8_%D1%83_%D0%B8%D0%B7%D0%B3%D0%BE%D0%BB%D0%BE%D0%B2%D1%8C%D1%8F</a>
<a href="https://en.wikipedia.org/wiki/Silva_rerum">https://en.wikipedia.org/wiki/Silva_rerum</a></p><p><a href="https://en.wikipedia.org/wiki/Index_card">https://en.wikipedia.org/wiki/Index_card</a>
<a href="https://en.wikipedia.org/wiki/Carl_Linnaeus#Systema_Naturae">https://en.wikipedia.org/wiki/Carl_Linnaeus#Systema_Naturae</a>
<a href="https://web.archive.org/web/20101225103352/http://www2.lse.ac.uk/economicHistory/pdf/FACTSPDF/3909MuellerWilleScharf.pdf">https://web.archive.org/web/20101225103352/http://www2.lse.ac.uk/economicHistory/pdf/FACTSPDF/3909MuellerWilleScharf.pdf</a>
<a href="https://web.archive.org/web/20111005115709/http://centres.exeter.ac.uk/medhist/projects/Linnaeus/index.shtml">https://web.archive.org/web/20111005115709/http://centres.exeter.ac.uk/medhist/projects/Linnaeus/index.shtml</a>
<a href="https://en.wikipedia.org/wiki/Library_catalog">https://en.wikipedia.org/wiki/Library_catalog</a>
<a href="https://www.sciencedaily.com/releases/2009/06/090616080137.htm">https://www.sciencedaily.com/releases/2009/06/090616080137.htm</a>
<a href="https://en.wikipedia.org/wiki/Mundaneum">https://en.wikipedia.org/wiki/Mundaneum</a>
<a href="https://www.theparisreview.org/interviews/4310/the-art-of-fiction-no-40-vladimir-nabokov">https://www.theparisreview.org/interviews/4310/the-art-of-fiction-no-40-vladimir-nabokov</a></p><p><a href="https://en.wikipedia.org/wiki/Zettelkasten">https://en.wikipedia.org/wiki/Zettelkasten</a>
<a href="https://en.wikipedia.org/wiki/Conrad_Gessner">https://en.wikipedia.org/wiki/Conrad_Gessner</a>
<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4837604/">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4837604/</a>
<a href="https://www.lesswrong.com/posts/NfdHG6oHBJ8Qxc26s/the-zettelkasten-method-1">https://www.lesswrong.com/posts/NfdHG6oHBJ8Qxc26s/the-zettelkasten-method-1</a>
2. Gessner: "On indexes to books"  <a href="https://www.ergon-verlag.de/isko_ko/downloads/ic_8_1981_1_c.pdf">https://www.ergon-verlag.de/isko_ko/downloads/ic_8_1981_1_c.pdf</a>
<a href="https://luhmann.surge.sh/communicating-with-slip-boxes">https://luhmann.surge.sh/communicating-with-slip-boxes</a>
<a href="https://www.youtube.com/watch?v=Fqin4NUEx-c">https://www.youtube.com/watch?v=Fqin4NUEx-c</a>
<a href="https://en.wikipedia.org/wiki/Bibliotheca_universalis">https://en.wikipedia.org/wiki/Bibliotheca_universalis</a>
<a href="https://www.heise.de/tp/features/Alles-Wesentliche-findet-sich-im-Zettelkasten-3398418.html">https://www.heise.de/tp/features/Alles-Wesentliche-findet-sich-im-Zettelkasten-3398418.html</a>
<a href="https://ru.wikipedia.org/wiki/%D0%9B%D1%83%D0%BC%D0%B0%D0%BD,_%D0%9D%D0%B8%D0%BA%D0%BB%D0%B0%D1%81#%D0%9A%D0%B0%D1%80%D1%82%D0%BE%D1%82%D0%B5%D0%BA%D0%B0">https://ru.wikipedia.org/wiki/%D0%9B%D1%83%D0%BC%D0%B0%D0%BD,_%D0%9D%D0%B8%D0%BA%D0%BB%D0%B0%D1%81#%D0%9A%D0%B0%D1%80%D1%82%D0%BE%D1%82%D0%B5%D0%BA%D0%B0</a>
<a href="https://niklas-luhmann-archiv.de/bestand/zettelkasten/zettel/ZK_1_NB_1_1_V">https://niklas-luhmann-archiv.de/bestand/zettelkasten/zettel/ZK_1_NB_1_1_V</a>
<a href="https://vas3k.club/post/3040/">https://vas3k.club/post/3040/</a></p><p><a href="https://en.wikipedia.org/wiki/Office_of_the_future">https://en.wikipedia.org/wiki/Office_of_the_future</a>
<a href="https://en.wikipedia.org/wiki/As_We_May_Think">https://en.wikipedia.org/wiki/As_We_May_Think</a>
<a href="https://www.theatlantic.com/magazine/archive/1945/07/as-we-may-think/303881/">https://www.theatlantic.com/magazine/archive/1945/07/as-we-may-think/303881/</a>
<a href="https://habr.com/ru/company/engelbart/blog/279241/">https://habr.com/ru/company/engelbart/blog/279241/</a>
<a href="https://en.wikipedia.org/wiki/Memex">https://en.wikipedia.org/wiki/Memex</a>
<a href="https://en.wikipedia.org/wiki/Project_Xanadu">https://en.wikipedia.org/wiki/Project_Xanadu</a>
<a href="https://books.google.ru/books?id=uUkEAAAAMBAJ&amp;q=As+We+May+Think&amp;redir_esc=y#v=onepage&amp;q&amp;f=false">https://books.google.ru/books?id=uUkEAAAAMBAJ&amp;q=As+We+May+Think&amp;redir_esc=y#v=onepage&amp;q&amp;f=false</a></p><p><a href="https://obsidian.md/">https://obsidian.md/</a>
<a href="https://fortelabs.co/blog/basboverview/">https://fortelabs.co/blog/basboverview/</a>
<a href="https://maggieappleton.com/basb">https://maggieappleton.com/basb</a></p>]]></description>
            <link>https://baradusov.ru/info-overload</link>
            <guid isPermaLink="true">https://baradusov.ru/info-overload</guid>
            <pubDate>Fri, 02 Apr 2021 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Математика и вёрстка: контекст намного важнее, чем сложность]]></title>
            <description><![CDATA[<p><em>Перевод статьи</em> <a href="https://blog.logrocket.com/math-and-front-end-context-is-so-much-more-important-than-degree-of-difficulty-6b689f999edc"><em>Math and front-end: Context is so much more important than degree of difficulty</em></a> <em>Хуэй Цзин Чэнь в блоге</em> <a href="https://blog.logrocket.com/"><em>LogRocket</em></a><em>.</em></p><p><img src="https://cdn-images-1.medium.com/max/2560/1*UCqSM9zFEHlBHUOGw6XwCg.jpeg"></p><p>Если вы были одним из тех детей, которые удивлялись, зачем вам уроки математики и все эти углы и алгебра, ну, вот таким был и я. Признаюсь, я был слишком неугомонным и мне быстро наскучило быть хорошим учеником. Но когда я стал старше, я понял, что определённые математические принципы имеют практическое применение в моей ежедневной работе (не дифференциальные исчисления, я же не ракетостроитель).</p><p>Вопрос, нужно ли хорошо знать математику, чтобы быть хорошим веб-разработчиком, сводится к тому, что для вас означает хорошо знать математику. Если хорошее знание математики — это понимание математических понятий, как анализ и дифференциальные исчисления, которые включают в себя много доказательств и теорем, должен сказать, что всё это не используется в веб-дизайне/разработке.</p><p>И хотя практические знания требуются, пожалуй, на уровне средней школы, главное — уметь применять эти знания арифметики и геометрии в контексте веб-дизайна.</p><p>К примеру, для создания треугольников при помощи манипуляций с <code>border-width</code> нужно знать и то, как браузер рендерит границы элемента, и то, как правильно применить знания тригонометрии, чтобы «хакнуть» это свойство.</p><h3>Арифметика</h3><blockquote><p>Арифметика — это раздел математики, изучающий свойства натуральных (а также целых), дробных чисел и основные операции, применяемые к этим числам.</p></blockquote><blockquote><p>— <a href="https://www.cut-the-knot.org/WhatIs/WhatIsArithmetic.shtml">Александр Богомольный</a></p></blockquote><p>Кажется, само собой разумеющимся, но если вы делаете адаптивный дизайн, и будем честными, адаптивный дизайн — норма в наши дни, арифметика точно будет полезна.</p><p>И какое же отношение арифметика имеет к дизайну, спросите вы? Прямое. Но сначала, рассмотрим единицы измерения CSS и их значения, потому что это то, что мы будем считать.</p><p>Числа в CSS встречаются довольно часто, обычно как значения свойств. Спецификацией, которое это определяет, является <a href="https://www.w3.org/TR/css-values-3/">CSS Values and Units Module Level 3</a>. Ключевая функция в арифметике CSS — это <code>calc()</code>, которая поддерживает четыре основные операции: сложение, вычитание, умножение и деление.</p><p>Во времена, когда веб-дизайн был преимущественно с фиксированной шириной, дизайнеры и разработчики делали pixel-perfect вёрстку, которая работала только на определённых разрешениях. Но с увеличением количества экранов с различными разрешениями, которые пользователи использовали для выхода в интернет, дизайн с фиксированной шириной больше не подходил.</p><p>Гораздо больше смысла было позволить браузерам вычислять размеры элементов на странице в зависимости от размера окна браузера, используя проценты, относительные единицы <code>em</code> или <code>ch</code>, и, из недавних, единицы измерения относительно размера окна (<code>vh</code>, <code>vw</code>, <code>vmin</code>, <code>vmax</code>). Функция <code>calc</code> работает с комбинацией значений различных единиц, производя за нас сложные вычисления, чтобы мы могли сфокусироваться на дизайне и вёрстке компонентов.</p><h4>Проблема плавающего подвала</h4><p>Распространённое требование во многих макетах сделать «прибитый» подвал к низу экрана, даже если недостаточно контента для заполнения всей высоты экрана.</p><p>Есть несколько различных способов для достижения такого эффекта, но использование <code>calc</code> достаточно красивый способ заставить подвал остаться внизу экрана и в обычном потоке, даже если недостаточно контента.</p><p>Рассмотрим простую разметку, в которой есть элементы <code>header</code>, <code>main</code> и <code>footer</code>.</p><pre><code class="language-html">&lt;header&gt;Header&lt;/header&gt;
&lt;main&gt;Main&lt;/main&gt;
&lt;footer&gt;Footer&lt;/footer&gt;
</code></pre><p>Чтобы заставить подвал остаться внизу страницы, независимо от количества контента внутри элемента <code>main</code>, элемент <code>main</code> должен иметь минимум 100% высоты от высоты размера окна браузера минус высота <code>header</code> и <code>footer</code>:</p><p>100% высоты окна – ( высота header + высота footer)</p><p>Переводим всё в CSS (тут браузерные стили уже сброшены):</p><pre><code class="language-css">main {
  min-height: calc(100vh - 2em);
}
</code></pre><p>Без дополнительной стилизации, высота шапки и подвала должна быть <code>1em</code> из-за текста внутри них. Использование <code>min-height</code> вместо <code>height</code> гарантирует, что подвал останется в обычном потоке, если контента будет больше высоты размера окна.</p><p><img src="https://cdn-images-1.medium.com/max/800/1*SRAqZw1QiuH8qtBKcpDbMg.gif"></p><p>Подвал всегда внизу окна браузера</p><h4>Типографика с плавной адаптацией</h4><p>Пока мы не отошли от темы адаптивного дизайна, давайте определим размер шрифта для разных разрешений, также с помощью математики. Размер шрифта можно задавать не только с помощью <code>px</code> и <code>em</code>, можно использовать также единицы измерения относительно размера окна (<code>vh</code>, <code>vw</code>, <code>vmin</code>, <code>vmax</code>). Проблема с таким подходом в том, что если размер окна станет слишком маленьким, то шрифт может уменьшиться настолько, что станет совсем неразборчивым.</p><p>Чтобы предотвратить это, можно использовать <code>calc</code> и установить минимальный размер шрифта:</p><pre><code class="language-css">body {
  font-size: calc(1em + 1vw);
}
</code></pre><p>Если требуется больший контроль над размером шрифта, то необходимо добавить больше переменных в формулу. Понятие точной плавной адаптивной типографики был представлен <a href="https://www.madebymike.com.au/">Майклом Ритмюллером</a> в статье <a href="https://www.madebymike.com.au/writing/precise-control-responsive-typography/">Precise control over responsive typography</a>, и было продолжением идеи <a href="http://tbrown.org/">Тима Брауна</a> о <a href="http://nicewebtype.com/notes/2012/02/03/molten-leading-or-fluid-line-height/">плавном интерлиньяже</a> (molten leading).</p><p>Формула Майка Ритмюллера выглядит так:</p><p><img src="https://cdn-images-1.medium.com/max/800/1*mFLbptG3QlTnkg8t8mcdjA.png"></p><p><a href="https://fvsch.com/">Флоренс Вёршелд</a> сделал глубокий анализ CSS-шлюзов в статье <a href="https://fvsch.com/css-locks">The math of CSS locks</a>, выразив отношение <code>font-size</code> к <code>line-height</code> как линейную функцию. Линейные функции можно представить в виде графика, который легко позволяет визуализировать отношение <code>font-size</code>/<code>line-height</code> и размером окна.</p><p><img src="https://cdn-images-1.medium.com/max/800/1*kOH4IwREyObitnEExlBtpw@2x.png"></p><p>График из статьи <a href="https://fvsch.com/css-locks">The math of CSS locks</a>, <a href="https://fvsch.com/">Флоренс Вёршелд</a></p><h3>Геометрия</h3><blockquote><p>Геометрия — это раздел математики, изучающий свойства геометрических объектов — точки, (прямые) линии и окружности, как самые простые из них.</p></blockquote><blockquote><p>— <a href="https://www.cut-the-knot.org/WhatIs/WhatIsGeometry.shtml">Александр Богомольный</a></p></blockquote><h4>Рисуем фигуры с помощью CSS</h4><p>Геометрия помогает понять, как создавать фигуры с помощью CSS. Возьмём, к примеру, простое свойство <code>border-radius</code>, которое используется для округления углов внешних границ элемента. Большинство из нас просто устанавливают одно значение и успокаиваются на этом, но <code>border-radius</code> немного сложнее, чем кажется.</p><p>Свойство <code>border-radius</code> на самом деле является сокращением для четырёх <code>border-*-radius</code> свойств, где <code>*</code> — это <code>top-left</code>, <code>top-right</code>, <code>bottom-left</code> или <code>bottom-right</code>. И оно может принимать два значения, разделённые символом <code>/</code>, первое значение — горизонтальный радиус, второе значение — вертикальный радиус. Диаграмма для наглядности:</p><p><img src="https://cdn-images-1.medium.com/max/800/1*tTZ5eGVf7B_mIjyuZq-bCg.png"></p><p>Когда мы используем проценты как значения, горизонтальный радиус будет равен этому значению в процентах от ширины границы блока, а вертикальный — высоты границы блока. Поэтому <code>border-radius: 50%</code> даёт нам идеальный круг или овал.</p><p>Рассмотрим кое-что более интересное, что тоже требует границы — треугольники. Треугольники на чистом CSS возможно сделать, «хакнув» границы элемента. Когда мы создаём границы вокруг элемента, края границ сталкиваются диагонально. Если задать достаточно толстые границы элементу, то можно увидеть, что границы являются трапециями.</p><p><img src="https://cdn-images-1.medium.com/max/800/1*Tz0tDzxwi_5dkyK47ydb4w.png"></p><p>Если задать нулевые ширину и высоту элементу, трапеции станут треугольниками, и вуаля, получаем треугольники на чистом CSS.</p><p><img src="https://cdn-images-1.medium.com/max/800/1*S2mJPLYfi2LrkqYPfLOqYg.png"></p><p>Обычно нам не нужен набор из четырёх треугольников, поэтому соседние границы нужно будет сделать невидимыми, задав им прозрачный цвет (<code>transparent</code>), и также не устанавливать значения границы напротив.</p><pre><code class="language-css">.triangle-up {
  width: 0;
  height: 0;
  border-left: 30px solid transparent;
  border-right: 30px solid transparent;
  border-bottom: 30px solid gray;
}
</code></pre><p><img src="https://cdn-images-1.medium.com/max/800/1*A1SEukmLooo5ClBBf-xgKw.png"></p><p>Очевидно, нам не всегда требуется равнобедренный треугольник (как раз его мы получаем, установив одно значение для ширины всей границы), поэтому тут также пригодится геометрия. Можно использовать <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B5%D0%BE%D1%80%D0%B5%D0%BC%D0%B0_%D0%9F%D0%B8%D1%84%D0%B0%D0%B3%D0%BE%D1%80%D0%B0">теорему Пифагора</a>, чтобы подсчитать требуемую высоту треугольника:</p><p><img src="https://cdn-images-1.medium.com/max/800/1*wCwyJDlZys7n4BCYwrRLpQ.png"></p><pre><code class="language-css">.triangle-up {
  width: 0;
  height: 0;
  border-left: 50px solid transparent;
  border-right: 50px solid transparent;
  border-bottom: calc(100px \* 0.866) solid gray;
}
</code></pre><h3>Итог</h3><p>Может показаться, что математика совсем не относится к визуальной стороне веб-дизайна и разработке, но всё же она имеет несколько практических применений. Поэтому почему бы не стряхнуть пыль со школьных тетрадей по математике и посмотреть, не найдётся ли там что-нибудь, что поможет взглянуть на изучение CSS c другой стороны?</p>]]></description>
            <link>https://baradusov.ru/math-and-frontend</link>
            <guid isPermaLink="true">https://baradusov.ru/math-and-frontend</guid>
            <pubDate>Wed, 20 Jun 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Паттерны ограниченного мышления]]></title>
            <description><![CDATA[<p><em>Серия кратких конспектов избранных глав из книги “Как победить стресс и депрессию”, которые могут помочь справиться с низкой самооценкой, навязчивыми негативными мыслями, перфекционизмом и откладыванием дел.</em></p><p>Содержание:</p><ol><li><a href="https://baradusov.ru/auto-thoughts">Автоматические мысли</a>.</li><li>Паттерны ограниченного мышления.</li></ol><hr><p>Ограниченное мышление — это иррациональные рассуждения (логика) насчёт произошедших событий.</p><p>Обычно разделяют восемь паттернов ограниченного мышления: фильтрация, поляризованное мышление, сверхобобщение, чтение мыслей, катастрофизация, преувеличение, персонализация и долженствования.</p><h3><strong>Фильтрация</strong></h3><p>Фокусирование на негативном, игнорирование позитивного.</p><h4><strong>Что делать</strong></h4><p>Нужно переместить фокус. Сосредоточиться на решении проблемы, а не на самой проблеме. Сконцентрироваться на противоположных мыслях. Например, если зацикливаетесь на потерях, переключитесь на то ценное, что у вас есть.</p><h3><strong>Поляризованное мышление</strong></h3><p>Различие только крайних качеств: хорошее и плохое, среднего не существует.</p><h4>Что делать</h4><p>Самое очевидное — исключить полярные суждения. Люди не делятся на счастливых и несчастных, умных и глупых. В них есть и те и другие качества. Если нужно дать какую-либо оценку, делайте это в процентном соотношении: “В 5 процентах случаев я — полный профан, а в остальных — очень даже ничего”.</p><h3><strong>Сверхобобщение</strong></h3><p>Общие выводы на основе одного случая или факта.</p><h4>Что делать</h4><p>Нужно перейти к точном расчёту, начать опираться на конкретные факты, исключить негативные ярлыки, помнить, что абсолютов не существует.<br>
<!-- -->Давайте точную характеристику, например, вместо “У нас огромные долги” — “Мы задолжали 27 тысяч рублей”. Если заключение основано на одном-двух фактах, одной ошибке, откажитесь от него до тех пор, пока не получите более убедительных доказательств. Избегайте слов “все”, “каждый”, “всегда”, “никогда”, “никто”. Утверждения с этими словами отвергают существование других цветов, кроме чёрного и белого.</p><h3><strong>Чтение мыслей</strong></h3><p>Убеждение, что знаете мысли и чувства других.</p><h4>Что делать</h4><p>Нужно проверить свои убеждения, найти факты, подтверждающие выводы, придумать альтернативные интерпретации.<br>
<!-- -->Лучше всего не делать выводов о людях вообще. Рассматривайте все свои мнения о людях как гипотезы, которые требуют проверки. Мы не можем знать, что думают и чувствуют другие до тех пор, пока они сами нам всё не расскажут.</p><h3><strong>Катастрофизация</strong></h3><p>Ожидание только самого худшего.</p><h4>Что делать</h4><p>Нужно определить вероятность события. Катастрофизация — путь к тревожности, поэтому стоит задаваться вопросом: “Какова вероятность этого?” Определяя степень вероятности, легче реалистично взглянуть на пугающие обстоятельства жизни.</p><h3><strong>Преувеличение</strong></h3><p>Преувеличение масштабов проблем и всего плохого.</p><h4>Что делать</h4><p>Нужно научиться видеть реальный масштаб проблемы и, очевидно, перестать преувеличивать. Избавиться от слов типа “страшный”, “ужасный”, “жуткий” и фраз “я этого не вынесу”, “это невозможно”, “это невыносимо”. Человек способен переживать сильнейшие психологические и физические травмы, так что вы можете привыкнуть и выдержать почти всё.</p><h3><strong>Персонализация</strong></h3><p>Сравнение себя с другими, убеждение в том, что все действия и реакции окружающих — реакция на вас.</p><h4>Что делать</h4><p>Нужно научиться искать подтверждения своим домыслам и отказаться от сравнений, потому что они бессмысленны. Не делайте выводы пока не получите обоснованных подтверждений.</p><h3><strong>Долженствования</strong></h3><p>Убеждённость в том, что вы и окружающие должны вести себя по определённым правилам.</p><h4>Что делать</h4><p>Нужно понять, что из любых правил есть исключения, и что ценности — это личное дело каждого. Не забывайте, что люди не одинаковы. Вас может раздражать, когда люди действуют вопреки ваших ценностей, но ваши личные ценности — именно личные, а не чьи-то.</p>]]></description>
            <link>https://baradusov.ru/patterns-of-limited-thinking</link>
            <guid isPermaLink="true">https://baradusov.ru/patterns-of-limited-thinking</guid>
            <pubDate>Fri, 03 Aug 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Стилизуем кнопки правильно]]></title>
            <description><![CDATA[<p><em>Перевод статьи</em> <a href="https://fvsch.com/styling-buttons/"><em>Styling buttons, the right way</em></a> <em>Флоренса Вёршелда.</em></p><p>Если вы создаёте сайт или веб-приложение, там наверняка есть кнопки. А может быть ссылки, выглядящие как кнопки? В любом случае важно правильно их сделать.</p><p>В этой статье мы создадим основные стили для тегов <code>&lt;a&gt;</code> и <code>&lt;button&gt;</code>, а также собственный CSS-компонент <em>.btn</em>. Для каждого этапа вы найдёте демо-страницу.</p><p><a href="https://fvsch.com/articles/styling-buttons/step1-reset.html">Этап 1</a>: Сброс стилей у <code>&lt;button&gt;</code>.<br>
<a href="https://fvsch.com/articles/styling-buttons/step2-basic.html">Этап 2</a>: Создание CSS-компонента «button».<br>
<a href="https://fvsch.com/articles/styling-buttons/step3-states.html">Этап 3</a>: Стилизация активного, ховер- и фокус-состояния.<br>
<a href="https://fvsch.com/articles/styling-buttons/step4-final.html">Этап 4</a>: Разбираемся с прилипшим фокусом.</p><h3>Сброс стилей у <code>&lt;button&gt;</code></h3><p>Как правило, 99,99% кликабельных элементов на сайте или в приложении должны быть <code>&lt;a&gt;</code> или <code>&lt;button&gt;</code>. Что делать, если вы не уверены, какой элемент использовать в определённых ситуациях:</p><ol><li>Если при клике открывается другая страница или изменяется большая часть контента на странице — используйте ссылку (<code>&lt;a href=”some_url”&gt;…&lt;/a&gt;</code>).</li><li>В остальных случаях используйте обычную кнопку (<code>&lt;button type=”button”&gt;…&lt;/button&gt;</code>).</li></ol><p>Использование правильного элемента имеет ряд преимуществ: это благоприятно для SEO (особенно для ссылок!), хорошо для навигации с клавиатуры и улучшает доступность для всех пользователей.</p><p>Несмотря на это, разработчики редко используют <code>&lt;button&gt;</code>. По всему интернету можно встретить кучу кнопок, которые вызывают действия через JavaScript, но на деле оказывается, что это <code>&lt;div&gt;</code>, <code>&lt;span&gt;</code>или<code>&lt;a&gt;</code>.</p><p>Почему же <code>&lt;button&gt;</code> так редко используется?</p><ul><li><strong>Знание</strong>: многие разработчики просто не знают о нём (выучить более <a href="https://developer.mozilla.org/ru/docs/Web/HTML/Element">100 HTML-элементов</a> не так-то просто).</li><li><strong>Стилизация</strong>: по умолчанию у <code>&lt;button&gt;</code> сложные стили, из-за которых трудно добиться собственного вида.</li></ul><p>К счастью, стилизацию поправить не так уж сложно!</p><pre><code class="language-css">/**  
 * Сброс стилей у кнопки. 
 * Придётся немного поработать, чтобы получить нейтральный вид.  
 */
button {
  padding: 0;
  border: none;
  font: inherit;
  color: inherit;
  background-color: transparent;
  /* отображаем курсор в виде руки при наведении; некоторые  
   * считают, что необходимо оставлять стрелочный вид для кнопок 
   */
  cursor: pointer;
}
</code></pre><p>В итоге мы получаем кнопки, которые выглядят как обычный текст.</p><p><a href="https://codepen.io/baradusov/pen/RJGZrN">Ссылка на Codepen</a></p><p>Минус в том, что при таком подходе необходимо стилизовать все кнопки, или пользователь не распознает их (см.: <a href="https://ru.wikipedia.org/wiki/%D0%92%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8">возможности</a>). Ещё один вариант — использовать этот стиль как миксин (Sass или другой препроцессор) и применять его выборочно:</p><pre><code class="language-less">@mixin button-reset {
  padding: 0;
  border: none;
  font: inherit;
  color: inherit;
  background-color: transparent;
  cursor: pointer;
}

.my-custom-button {
  @include button-reset;
  padding: 10px;
  background-color: skyblue;
}
</code></pre><pre><code class="language-html">&lt;button type="button"&gt;
  У меня браузерные стили по-умолчанию.
&lt;/button&gt;

&lt;button type="button" class="my-custom-button"&gt;
  А я использую собственные стили.
&lt;/button&gt;
</code></pre><h3>Создание CSS-компонента «button»</h3><p>Теперь, когда мы сбросили дефолтные стили, можем приступить к написанию своих. Вот что мы сделаем:</p><ul><li>«кнопочный» стиль, который можно применять и к ссылкам и кнопкам;</li><li>применять мы хотим выборочно, потому что у нас есть другие ссылки и кнопки с разными стилями на странице.</li></ul><p>Напрашивается CSS-компонент. CSS-компонент — это стиль или набор стилей, которые применяются, используя классы, к различным типам HTML-элементов. Вам должно быть знакомо это понятие, если вы используете CSS-фреймворки Bootstrap или Foundation.</p><p>Назовём этот компонент <em>.btn (как в Bootstrap, но мы ограничимся одним цветом и размером, чтобы было проще).</em></p><pre><code class="language-css">.btn {
  /* по-умолчанию для &lt;button&gt;, но пригодится для &lt;a&gt; */
  display: inline-block;
  text-align: center;
  text-decoration: none;

  /* создаём маленькие отступы, если кнопки перенесутся на две строки */
  margin: 2px 0;

  /* невидимая граница (понадобится для цвета при наведении/фокусе) */
  border: solid 1px transparent;
  border-radius: 4px;

  /* размер строится из текста и отступов (без width/height) */
  padding: 0.5em 1em;

  /* убедитесь, что достаточно контраста! */
  color: #ffffff;
  background-color: #9555af;
}
</code></pre><p>Вот что у нас получилось:</p><p><a href="https://codepen.io/baradusov/pen/zaKmPv">Ссылка на Codepen</a></p><p>Вам, возможно, интересно, почему контраст так важен. Ведь кнопки на второй строке выглядят красиво: кому не нравятся пастельные цвета?</p><p>Проще говоря: <em>с хорошим контрастом, вы охватите больше пользователей.</em> Некоторые пользователи — слабовидящие. Другие могут просматривать ваш сайт с телефона, на ходу, а под дневным светом труднее читать. Вы можете проверить <a href="https://webaim.org/resources/contrastchecker/">коэффициент контрастности</a> и почитать о <a href="https://www.nngroup.com/articles/low-contrast/">контрастности текста</a>.</p><h3>Стилизация активного, ховер- и фокус-состояния</h3><p>Круто, когда ваша кнопка выглядит красиво, но… пользователи будут взаимодействовать с ней, и поэтому требуется визуальный отклик, когда состояние кнопки изменяется.</p><p>У браузеров свои стили по-умолчанию для «активного» (т.е. нажатого) и «фокусного» состояния, но, сбросив стили у кнопки, мы избавились от некоторых из них. Не хватает ещё стилей при наведении мышкой, да и в целом хочется, чтобы все стили были видны <em>и</em> соответствовали нашему дизайну.</p><p>Начнём со стилей для состояния <em>:active,</em> которое срабатывает при клике кнопки или ссылки:</p><pre><code class="language-css">/* олдскульный эффект «нажатия» + цветовые правки */
.btn:active {
  transform: translateY(1px);
  filter: saturate(150%);
}
</code></pre><p>Мы могли бы изменять цвет кнопки, но я хочу использовать этот эффект при наведении:</p><pre><code class="language-css">/* инвертируем цвета при наведении */
.btn:hover {
  color: #9555af;
  border-color: currentColor;
  background-color: white;
}
</code></pre><p>Давайте добавим теперь и фокусные стили. Пользователи вашего сайта или веб-приложения могут использовать обычную или виртуальную клавиатуру (на iOS и Android), чтобы «сфокусировать» и активировать поле в форме, кнопки, ссылки и другие интерактивные элементы.</p><ul><li>Для некоторых пользователей это ускоряет заполнение форм.</li><li>Для других использование мышки или тач-указателя невозможно или затруднительно. Они пользуются клавиатурой или специальным устройством.</li></ul><p>Во многих веб-проектах, которые я видел, дизайнеры задают стили только для наведения мышки, но не для фокуса. Что же нам делать? Простое решение — использовать :hover стили для :focus.</p><pre><code class="language-css">/* инвертируем цвета при наведении и фокусе */
.btn:hover,
.btn:focus {
  color: #9555af;
  border-color: currentColor;
  background-color: white;
}
</code></pre><p>И когда у нас будут стили для фокуса (только не до!), мы можем сбросить браузерные стили для кнопки:</p><pre><code class="language-css">.btn {
  /* ... */
  /* все браузеры: сбрасываем дефолтный outline,  
    так как у нас уже есть собственные стили */
  outline: none;
}

/* Firefox: сбрасываем внутреннюю границу при фокусе */
.btn::-moz-focus-inner {
  border: none;
}
</code></pre><p>Попробуйте сами: если вы за компьютером, используйте Tab и Shift+Tab для навигации между кнопками:</p><p><a href="https://codepen.io/baradusov/pen/yEaqPV">Ссылка на Codepen</a></p><h3>Разбираемся с прилипшим фокусом</h3><p>Есть небольшой недочёт. В некоторых браузерах, если кликнуть по ссылке или кнопке, применяются два псевдокласса:</p><ul><li><em>:active</em></li><li><em>:focus</em></li></ul><p>«Активный» псевдокласс убирается сразу после того, как отпускается кнопка мыши или трекпада после нажатия. Но в некоторых браузерах после этого остаётся <em>:focus</em> стиль, пока пользователь не кликнет где-нибудь на странице.</p><p>В моих тестах, такое происходит в Chrome (66), Edge (16), и Firefox (60, только для ссылок). Safari (11.1), кажется, поумнее, и там нет такой проблемы.</p><p>Мы можем исправить это, используя новый <a href="https://drafts.csswg.org/selectors/#the-focus-visible-pseudo">псевдокласс <em>:focus-visible</em></a> (черновик спецификации). Этот элемент ещё не полностью проработан, но идея в том, что браузеры должны применять состояние <em>:focus-visible</em> только при взаимодействии с клавиатуры или подобных устройств, а не при клике.</p><p>Так как <em>:focus-visible</em> ещё не внедрён в браузеры, нам придётся использовать решение на JavaScript, такой как <a href="https://github.com/WICG/focus-visible">этот полифилл</a>. Он действует по всей странице и добавляет класс <em>focus-visible</em> только элементам, которые получают фокус <em>при использовании клавиатуры</em>.</p><p>Давайте изменим стили, чтобы отделить стили <em>:hover</em> от стилей <em>:focus</em>.</p><pre><code class="language-css">/* инвертируем цвета при наведении */
.btn:hover {
  color: #9050aa;
  border-color: currentColor;
  background-color: white;
}
/* убеждаемся, что есть видимые границы при фокусе */
.btn:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(255, 105, 180, 0.5), 0 0 0 1.5px rgba(255, 105, 180, 0.5);
}
</code></pre><p>Теперь, после того как мы подключили к странице <em>focus-visible.js</em>, он будет добавлять класс <em>js-focus-visible</em> элементу <code>&lt;body&gt;</code>.<em> Мы можем использовать это, чтобы убрать стили фокуса с элементов, которые </em>не имеют<em> класс <!-- -->_<!-- -->focus-visible</em>:</p><pre><code class="language-css">/* скрываем фокусные стили, если используется не клавиатура */
.js-focus-visible .btn:focus:not(.focus-visible) {
  box-shadow: none;
}
</code></pre><p>Более простой способ — определить фокусные стили только для класса <em>focus-visible</em>, но если полифилл неактивен (например, если JS не смог загрузится), то стили не применятся.</p><p>Окончательный вариант:</p><p><a href="https://codepen.io/baradusov/pen/dKpwZb">Ссылка на Codepen</a></p><p><em>Окончательный вариант можно посмотреть <a href="https://fvsch.com/articles/styling-buttons/step4-final.html">на сайте Флоренса Вёршелда</a>.</em></p>]]></description>
            <link>https://baradusov.ru/styling-button-the-right-way</link>
            <guid isPermaLink="true">https://baradusov.ru/styling-button-the-right-way</guid>
            <pubDate>Sat, 09 Jun 2018 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Зачем мне личный сайт]]></title>
            <description><![CDATA[<p>Зачем мне личный сайт.</p><p><a href="https://indieweb.org/why">Why</a></p>]]></description>
            <link>https://baradusov.ru/why-i-have-my-own-website</link>
            <guid isPermaLink="true">https://baradusov.ru/why-i-have-my-own-website</guid>
            <pubDate>Fri, 02 Apr 2021 00:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>